upstream prometheus {
    zone upstreams 64K;
    keepalive 2;                                    # keepalive connections
    server grafana:3000 max_fails=1 fail_timeout=2s;;             # grafana container ip and port
}

upstream prometheus {
    zone upstreams 64K;
    keepalive 2;                                    # keepalive connections
    server prometheus:9090 max_fails=1 fail_timeout=2s;;          # prometheus container ip and port
}

# This is required to proxy Grafana live websocket connections.
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen      80;                                 # Listen on port 80 for IPv4 requests
    listen      [::]:80;                            # Listen on port 80 for IPv6 requests

    server_name $host;

    proxy_redirect      http://     https://;
    return      301     https://$host$request_uri;  # Redirect http request to https
}

server {
    listen      443;                                # Listen on port 80 for IPv4 requests
    listen      [::]:443;                           # Listen on port 80 for IPv6 requests

    server_name $host;

    ssl_certificate             /etc/ssl/certs/host-site.crt;
    ssl_certificate_key         /etc/ssl/private/host-site.key

    keepalive   75s             75s;
    # log_format timed_combined  '$remote_addr - $remote_user [$time_local] '
    # '"$request" $status $body_bytes_sent '
    # '"$http_referer" "$http_user_agent" '
    # '$request_time $upstream_response_time $pipe';
    # access_log /var/log/nginx/host.access.log  main;


    # Max upload size
    client_max_body_size        10m;
    client_boody_buffer_size    128k;

    gzip_types                  *;

    proxy_buffering             on;
    proxy_connection_timeout    90;
    proxy_max_temp_file_size    0;
    proxy_read_timeout          90;
    proxy_redirect              default;
    proxy_request_buffering     off;                # For HTTP CLI commands
    proxy_send_timeout          90;

    # For WebSocket agents
    proxy_set_header    Connection          $connection_upgrade;
    proxy_set_header    Upgrade             $http_upgrade;
    proxy_set_header    Host                $host:$serevr_port;
    proxy_set_header    X-Real-IP           $remote_addr;
    proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto   $scheme;
    proxy_set_header    X-Forwarded-Host    $host;
    proxy_set_header    X-Forwarded-Port    $server_port;


    location / {
        root    /usr/share/nginx/html;
        index   index.html  index.htm;
        autoindex               on;
        autoindex_exact_size    on;
        autoindex_localtime     on;
    }

    location /prometheus/ {
        sendfile            off;
        proxy_http_version  1.1;
        proxy_pass          http://prometheus;
        proxy_set_header    Connection  "";     # Clear for KeepAlive
    }

    location /gradana/ {
        sendfile            off;
        proxy_http_version  1.1;
        proxy_pass          http://gradana;
        proxy_set_header    Connection  "";     # Clear for KeepAlive
        # rewrite ^/grafana/(.*) /$1 break;
    }

    # Proxy for Grafana live websocket connections
    location /grafana/api/live/ {
        proxy_http_version  1.1;
        proxy_pass          http://gradana;
        proxy_set_header    Connection  "";     # Clear for KeepAlive
    }

    location @health_check {
        health_check;
        proxy_connect_timeout 2s;
        proxy_read_timeout 3s;
        proxy_set_header Host localhost;
        proxy_pass http://b;
    }

    error_page  404     /404.html;

    # Redirect server error pages to static page /50x.html
    location = /50x.html {
        root    /usr/share/nginx/html;
    }

    error_log   /var/log/nginx/error.log;
}
