name: monitoring


networks:
  monitoring:
    name:   monitoring
    driver: bridge

volumes:
  grafana_data: {}
  prometheus_data: {}

services:
  prometheus:
    image: quay.io/prometheus/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
        mode: 0755
      - source: alert_rules
        target: /etc/prometheus/rules/alert_rules.yml
        mode: 0755
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      # - '--storage.tsdb.retention.time=2d'
      # - '--storage.tsdb.retention.size=5MB'
      # - '--web.enable-admin-api'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=/prometheus/'
      # - '--web.route-prefix=/prometheus/'
    ports:
      - 9090:9090
    networks:
      - monitoring

  grafana:
    image: docker.io/grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    configs:
      - source: grafana_config
        target: /etc/grafana/grafana.ini
        mode: 0755
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 3000:3000
    networks:
      - monitoring
    depends_on:
      - prometheus

  nginx:
    image: docker.io/library/nginx:latest
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      # - ./nginx/html:/usr/share/nginx/html
      - ./nginx/logs:/var/log/nginx
      - /etc/localtime:/etc/localtime
      - ./nginx/tls/nginx-selfsigned.crt:/etc/ssl/certs/nginx-selfsigned.crt
      - ./nginx/tls/nginx-selfsigned.key:/etc/ssl/private/nginx-selfsigned.key
    ports:
      - 443:443
      - 80:80
    networks:
      - monitoring
    depends_on:
      - prometheus
      - grafana

configs:
  prometheus_config:
    content: |
      global:
        scrape_interval: 15s
        evaluation_interval: 15s
      alerting:
        alertmanagers:
          - static_configs:
              - targets:
                - alertmanager:9093
      rule_files:
        - /etc/prometheus/rules/alert_rules.yml
      scrape_configs:
        - job_name: "prometheus"
          static_configs:
            - targets: ["localhost:9090"]
  grafana_config:
    content: |
      [log]
      ; # Either "debug", "info", "warn", "error", "critical", default is "info"
      ; # we change from info to debug level
      level = debug
      [server]
      # Protocol (http or https)
      protocol = http
      # The http port to use
      http_port = 3000
      # The public facing domain name used to access grafana
      domain = localhost # Or your actual external domain/IP if not localhost
      # The full URL used to access Grafana from a web browser
      # IMPORTANT: Make sure this matches your Nginx setup, including the trailing slash
      root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana/
      #root_url = http://localhost/grafana/ # Simpler version if port is 80/443 externally
      # Serve Grafana from subpath
      serve_from_sub_path = true
  alert_rules:
    content: |
      groups:
        - name: system_alerts
          rules:
            - alert: HighCPUUsage
              expr: sum(rate(process_cpu_seconds_total[1m])) by (instance) > 0.8
              for: 1m
              labels:
                severity: warning
              annotations:
                summary: "High CPU usage detected on instance {{ $$labels.instance }}"
                description: "CPU usage is above 80% on instance {{ $$labels.instance }} for more than 1 minute."
